PartType promoter;
PartType terminator;
PartType scar;
PartType cds;
PartType rbs;
PartType ribozyme;

cds AmtR(.SEQUENCE("ATGGCAGGCGCAGTTGGTCGTCCGCGTCGTAGTGCACCGCGTCGTGCAGGTAAAAATCCGCGTGAAGAAATTCTGGATGCAAGCGCAGAACTGTTTACCCGTCAGGGTTTTGCAACCACCAGTACCCATCAGATTGCAGATGCAGTTGGTATTCGTCAGGCAAGCCTGTATTATCATTTTCCGAGCAAAACCGAAATCTTTCTGACCCTGCTGAAAAGCACCGTTGAACCGAGCACCGTTCTGGCAGAAGATCTGAGCACCCTGGATGCAGGTCCGGAAATGCGTCTGTGGGCAATTGTTGCAAGCGAAGTTCGTCTGCTGCTGAGCACCAAATGGAATGTTGGTCGTCTGTATCAGCTGCCGATTGTTGGTAGCGAAGAATTTGCAGAATATCATAGCCAGCGTGAAGCACTGACCAATGTTTTTCGTGATCTGGCAACCGAAATTGTTGGTGATGATCCGCGTGCAGAACTGCCGTTTCATATTACCATGAGCGTTATTGAAATGCGTCGCAATGATGGTAAAATTCCGAGTCCGCTGAGCGCAGATAGCCTGCCGGAAACCGCAATTATGCTGGCAGATGCAAGCCTGGCAGTTCTGGGTGCACCGCTGCCTGCAGATCGTGTTGAAAAAACCCTGGAACTGATTAAACAGGCAGATGCAAAATAA"));
cds PhlF(.SEQUENCE("ATGGCACGTACCCCGAGCCGTAGCAGCATTGGTAGCCTGCGTAGTCCGCATACCCATAAAGCAATTCTGACCAGCACCATTGAAATCCTGAAAGAATGTGGTTATAGCGGTCTGAGCATTGAAAGCGTTGCACGTCGTGCCGGTGCAAGCAAACCGACCATTTATCGTTGGTGGACCAATAAAGCAGCACTGATTGCCGAAGTGTATGAAAATGAAAGCGAACAGGTGCGTAAATTTCCGGATCTGGGTAGCTTTAAAGCCGATCTGGATTTTCTGCTGCGTAATCTGTGGAAAGTTTGGCGTGAAACCATTTGTGGTGAAGCATTTCGTTGTGTTATTGCAGAAGCACAGCTGGACCCTGCAACCCTGACCCAGCTGAAAGATCAGTTTATGGAACGTCGTCGTGAGATGCCGAAAAAACTGGTTGAAAATGCCATTAGCAATGGTGAACTGCCGAAAGATACCAATCGTGAACTGCTGCTGGATATGATTTTTGGTTTTTGTTGGTATCGCCTGCTGACCGAACAGCTGACCGTTGAACAGGATATTGAAGAATTTACCTTCCTGCTGATTAATGGTGTTTGTCCGGGTACACAGCGTTAA"));
cds SrpR(.SEQUENCE("ATGGCACGTAAAACCGCAGCAGAAGCAGAAGAAACCCGTCAGCGTATTATTGATGCAGCACTGGAAGTTTTTGTTGCACAGGGTGTTAGTGATGCAACCCTGGATCAGATTGCACGTAAAGCCGGTGTTACCCGTGGTGCAGTTTATTGGCATTTTAATGGTAAACTGGAAGTTCTGCAGGCAGTTCTGGCAAGCCGTCAGCATCCGCTGGAACTGGATTTTACACCGGATCTGGGTATTGAACGTAGCTGGGAAGCAGTTGTTGTTGCAATGCTGGATGCAGTTCATAGTCCGCAGAGCAAACAGTTTAGCGAAATTCTGATTTATCAGGGTCTGGATGAAAGCGGTCTGATTCATAATCGTATGGTTCAGGCAAGCGATCGTTTTCTGCAGTATATTCATCAGGTTCTGCGTCATGCAGTTACCCAGGGTGAACTGCCGATTAATCTGGATCTGCAGACCAGCATTGGTGTTTTTAAAGGTCTGATTACCGGTCTGCTGTATGAAGGTCTGCGTAGCAAAGATCAGCAGGCACAGATTATCAAAGTTGCACTGGGTAGCTTTTGGGCACTGCTGCGTGAACCGCCTCGTTTTCTGCTGTGTGAAGAAGCACAGATTAAACAGGTGAAATCCTTCGAATAA"));
promoter pAmtR(.SEQUENCE("CTTGTCCAACCAAATGATTCGTTACCAATTGACAGTTTCTATCGATCTATAGATAATGCTAGC"));
promoter pBAD(.SEQUENCE("ACTTTTCATACTCCCGCCATTCAGAGAAGAAACCAATTGTCCATATTGCATCAGACATTGCCGTCACTGCGTCTTTTACTGGCTCTTCTCGCTAACCAAACCGGTAACCCCGCTTATTAAAAGCATTCTGTAACAAAGCGGGACCAAAGCCATGACAAAAACGCGTAACAAAAGTGTCTATAATCACGGCAGAAAAGTCCACATTGATTATTTGCACGGCGTCACACTTTGCTATGCCATAGCATTTTTATCCATAAGATTAGCGGATCCTACCTGACGCTTTTTATCGCAACTCTCTACTGTTTCTCCATACCCGTTTTTTTGGGCTAGC"));
promoter pSrpR(.SEQUENCE("TCTATGATTGGTCCAGATTCGTTACCAATTGACAGCTAGCTCAGTCCTAGGTATATACATACATGCTTGTTTGTTTGTAAAC"));
promoter pTet(.SEQUENCE("TACTCCACCGTTGGCTTTTTTCCCTATCAGTGATAGAGATTGACATCCCTATCAGTGATAGAGATAATGAGCAC"));
rbs A1(.SEQUENCE("AATGTTCCCTAATAATCAGCAAAGAGGTTACTAG"));
rbs P3(.SEQUENCE("CTTTACGAGGGCGATCCT"));
rbs S3(.SEQUENCE("GAGTCTATGGACTATGTTTTCACAAAGGAAGTACCAGG"));
ribozyme BydvJ(.SEQUENCE("CTGAagGGTGTCTCAAGGTGCGTACCTTGACTGATGAGTCCGAAAGGACGAAACACCcctctacaaataattttgtttaa"));
ribozyme RiboJ10(.SEQUENCE("CTGAAGCGCTCAACGGGTGTGCTTCCCGTTCTGATGAGTCCGTGAGGACGAAAGCGCCTCTACAAATAATTTTGTTTAA"));
ribozyme RiboJ53(.SEQUENCE("CTGAAGCGGTCAACGCATGTGCTTTGCGTTCTGATGAGACAGTGATGTCGAAACCGCCTCTACAAATAATTTTGTTTAA"));
scar Cscar(.SEQUENCE("aatg"));
scar Escar(.SEQUENCE("gctt"));
scar Vscar(.SEQUENCE("tctg"));
scar Xscar(.SEQUENCE("tgtc"));
terminator ECK120029600(.SEQUENCE("TTCAGCCAAAAAACTTAAGACCGCCGGTCTTGTCCACTACCTTGCAGTAATGCGGTGGACAGGATCGGCGGTTTTCTTTTCTCTTCTCAA"));
terminator ECK120033737(.SEQUENCE("ggaaacacagAAAAAAGCCCGCACCTGACAGTGCGGGCTTTTTTTTTcgaccaaagg"));
terminator L3S2P55(.SEQUENCE("CTCGGTACCAAAGACGAACAATAAGACGCTGAAAAGCGTCTTTTTTCGTTTTGGTCC"));

Device SrpR_device(
   promoter,
   RiboJ10,
   S3,
   SrpR,
   ECK120029600
);
Device AmtR_device(
   promoter,
   BydvJ,
   A1,
   AmtR,
   L3S2P55
);
Device PhlF_device(
   promoter,
   promoter,
   RiboJ53,
   P3,
   PhlF,
   ECK120033737
);

Rule SrpR_rules ( ON SrpR_device:
   CONTAINS pBAD AND 
   STARTSWITH pBAD AND
   ALL_FORWARD
);
Rule AmtR_rules ( ON AmtR_device:
   CONTAINS pTet AND
   ALL_FORWARD
);
Rule PhlF_rules ( ON PhlF_device:
   CONTAINS pSrpR AND 
   CONTAINS pAmtR AND 
   STARTSWITH pSrpR AND 
   pSrpR BEFORE pAmtR AND
   ALL_FORWARD
);


SrpR_devices    = product(SrpR_device);
AmtR_devices    = product(AmtR_device);
PhlF_devices    = product(PhlF_device);

Device gate_SrpR();
Device gate_AmtR();
Device gate_PhlF();

Device circuit();

Rule allRules( ON circuit:
   gate_SrpR    EXACTLY 1 AND 
   gate_AmtR    EXACTLY 1 AND 
   gate_PhlF    EXACTLY 1 AND 
   gate_PhlF BEFORE gate_SrpR AND 
   gate_PhlF BEFORE gate_AmtR AND 
   gate_SrpR BEFORE gate_AmtR AND 
   ALL_FORWARD AND 
   Escar        EXACTLY 1 AND 
   Xscar        EXACTLY 1 AND 
   Vscar        EXACTLY 1 AND 
   Cscar        EXACTLY 1 AND 
   FORWARD Escar AND 
   FORWARD Xscar AND 
   FORWARD Vscar AND 
   FORWARD Cscar AND 
   [0] EQUALS Escar AND 
   [2] EQUALS Xscar AND 
   [4] EQUALS Vscar AND 
   [6] EQUALS Cscar
);

Array allResults;

for(num i1=0;  i1<sizeof(SrpR_devices);    i1=i1+1) {
for(num i2=0;  i2<sizeof(AmtR_devices);    i2=i2+1) {
for(num i3=0;  i3<sizeof(PhlF_devices);    i3=i3+1) {

gate_SrpR    = SrpR_devices[i1];
gate_AmtR    = AmtR_devices[i2];
gate_PhlF    = PhlF_devices[i3];

Device circuit(
   gate_SrpR,
   gate_AmtR,
   gate_PhlF,
   Escar,
   Xscar,
   Vscar,
   Cscar
);

result = permute(circuit);

allResults = allResults + result;

}
}
}
